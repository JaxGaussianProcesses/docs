Traceback (most recent call last):
  File "/Users/tompinder/miniforge3/envs/gpjax/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/tompinder/miniforge3/envs/gpjax/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/tompinder/miniforge3/envs/gpjax/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/tompinder/miniforge3/envs/gpjax/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/tompinder/miniforge3/envs/gpjax/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/tompinder/miniforge3/envs/gpjax/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/tompinder/miniforge3/envs/gpjax/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/tompinder/miniforge3/envs/gpjax/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def plot_kernel(kernel_params: dict, index_points: Float[Array, "N 2"], ax):
    N = int(jnp.sqrt(index_points.shape[0]))
    prior = gpx.Prior(kernel=gpx.kernels.RBF(active_dims=[0, 1]))
    params, *_ = gpx.initialise(prior, key).unpack()
    params['kernel'] = kernel_params
    sample = prior.predict(params)(index_points).sample(seed = key, sample_shape=(1, ))
    return sample.reshape(N, N)


# Generate an 2D N x N grid of index points where each row is a pair of coordinates
index_points = jnp.linspace(-3, 3.1, num=50)
X = jnp.stack(jnp.meshgrid(index_points, index_points), axis=-1).reshape(-1, 2)
params = [{"lengthscale": jax.Array([[1., 0.5]]), "variance": jax.Array([1.0])}, 
          {"lengthscale": jax.Array([[1.5, 1.]]), "variance": jax.Array([1.0])}]

fig, axes = plt.subplots(1, 2, figsize=(10, 5), subplot_kw={"projection": "3d"})

for ax, pa in zip(axes.ravel(), params):
    y = plot_kernel(pa, X, ax)
    ax.plot_surface(index_points, index_points, y, cmap="viridis", lw=0.5, rstride=1, cstride=1, edgecolor=None, alpha=0.5)
    ax.set_xlabel("input $x_1$", labelpad=-1)
    # ax.view_init(None, 180 + 50)
    ax.set_zlim(-2.0, 3.0)
    ax.set_zticks(range(-1, 3))
    ax.set_zticklabels([])
    ax.set_ylabel("input $x_2$", labelpad=-1)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 13[0m
[1;32m     11[0m index_points [38;5;241m=[39m jnp[38;5;241m.[39mlinspace([38;5;241m-[39m[38;5;241m3[39m, [38;5;241m3.1[39m, num[38;5;241m=[39m[38;5;241m50[39m)
[1;32m     12[0m X [38;5;241m=[39m jnp[38;5;241m.[39mstack(jnp[38;5;241m.[39mmeshgrid(index_points, index_points), axis[38;5;241m=[39m[38;5;241m-[39m[38;5;241m1[39m)[38;5;241m.[39mreshape([38;5;241m-[39m[38;5;241m1[39m, [38;5;241m2[39m)
[0;32m---> 13[0m params [38;5;241m=[39m [{[38;5;124m"[39m[38;5;124mlengthscale[39m[38;5;124m"[39m: [43mjax[49m[38;5;241m.[39mArray([[[38;5;241m1.[39m, [38;5;241m0.5[39m]]), [38;5;124m"[39m[38;5;124mvariance[39m[38;5;124m"[39m: jax[38;5;241m.[39mArray([[38;5;241m1.0[39m])}, 
[1;32m     14[0m           {[38;5;124m"[39m[38;5;124mlengthscale[39m[38;5;124m"[39m: jax[38;5;241m.[39mArray([[[38;5;241m1.5[39m, [38;5;241m1.[39m]]), [38;5;124m"[39m[38;5;124mvariance[39m[38;5;124m"[39m: jax[38;5;241m.[39mArray([[38;5;241m1.0[39m])}]
[1;32m     16[0m fig, axes [38;5;241m=[39m plt[38;5;241m.[39msubplots([38;5;241m1[39m, [38;5;241m2[39m, figsize[38;5;241m=[39m([38;5;241m10[39m, [38;5;241m5[39m), subplot_kw[38;5;241m=[39m{[38;5;124m"[39m[38;5;124mprojection[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124m3d[39m[38;5;124m"[39m})
[1;32m     18[0m [38;5;28;01mfor[39;00m ax, pa [38;5;129;01min[39;00m [38;5;28mzip[39m(axes[38;5;241m.[39mravel(), params):

[0;31mNameError[0m: name 'jax' is not defined
NameError: name 'jax' is not defined

